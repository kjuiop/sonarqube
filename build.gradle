plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id "org.sonarqube" version "4.2.1.3168"
    id 'java'
    id 'jacoco'
}

group 'io.gig'
version '1.0-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {

    /** spring **/
    implementation 'org.springframework.boot:spring-boot-starter-web'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    /** lombok **/
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    /** DB **/
    runtimeOnly 'com.h2database:h2'

    /** sonarqube **/
    implementation 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3'

    /** TEST **/
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

test {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
        xml.enabled true // sonarqube 분석에 필요한 xml파일만 생성
        csv.enabled false
        html.enabled false
    }

}

sonar {
    properties {
        property "sonar.projectKey", "sonarqube"
        property "sonar.projectName", "sonarqube"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.token", "sqp_8dd946de150519c57e19827cb7521d0fe134cab5"
        property "sonar.sources", "src"
        property "sonar.language", "java"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.profile", "Sonar way"
        property "sonar.java.binaries", "${buildDir}/classes"
        property "sonar.test.inclusions", "**/*Test.java"
        property "sonar.exclusions", "**/resources/static/**, **/Q*.class, **/test/**"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    }
}
